# This workflow is a reusable one called by other workflows
name: Master UI workflow (template)

on:
  workflow_call:
  # Variables to set when calling this reusable workflow
    inputs:
      browser:
        description: Web browser to test
        required: true
        type: string
      cypress_image:
        description: Cypress docker image to use
        required: true
        type: string
      cypress_test:
        description: Scenario to test
        required: true
        type: string
      docker_options:
        description: Set other docker options
        required: false
        type: string
      runner:
        description: Runner on which to execute tests
        required: true
        type: string
    secrets:
      ext_reg_user:
        required: false
      ext_reg_password:
        required: false
      s3_key_id:
        required: false
      s3_key_secret:
        required: false

jobs:
  installation:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install K3s - Helm - Rancher
        id: installation
        env:
          DASHBOARD_VERSION: epinio-v0.3.3
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          HELM_VERSION: 3.7.0
        run: |
          export MY_HOSTNAME=$(hostname)
          make e2e-ci

          ## Export information to other jobs
          ETH_DEV=$(ip route | awk '/default via / { print $5 }')
          echo '::set-output name=MY_IP::'$(ip a s ${ETH_DEV} | egrep -o 'inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | cut -d' ' -f2)
          echo '::set-output name=MY_HOSTNAME::'$(hostname)
    outputs:
      MY_HOSTNAME: ${{ steps.installation.outputs.MY_HOSTNAME}}
      MY_IP: ${{ steps.installation.outputs.MY_IP}}
 
  cypress-run:
    needs:
      - installation
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.cypress_image }}
      env:
        CLUSTER_NAME: local
        CORS: https://${{ needs.installation.outputs.MY_HOSTNAME }}
        EXT_REG_USER: ${{ secrets.ext_reg_user }}
        EXT_REG_PASSWORD: ${{ secrets.ext_reg_password }}
        RANCHER_USER: admin
        RANCHER_PASSWORD: rancherpassword
        RANCHER_URL: https://${{ needs.installation.outputs.MY_HOSTNAME }}/dashboard
        S3_KEY_ID: ${{ secrets.s3_key_id }}
        S3_KEY_SECRET: ${{ secrets.s3_key_secret }}
        SYSTEM_DOMAIN: ${{ needs.installation.outputs.MY_IP }}.omg.howdoi.website
      options: --add-host ${{ needs.installation.outputs.MY_HOSTNAME}}:${{ needs.installation.outputs.MY_IP }} ${{ inputs.docker_options }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          # Specify Browser since container image is compile with Firefox
          browser: ${{ inputs.browser }}
          headless: true
          spec: cypress/integration/scenarios/${{ inputs.cypress_test }}

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 7

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 7

  delete-cluster:
    if: always()
    needs: [installation, cypress-run]
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Delete k3s cluster
        run: |
          sudo /usr/local/bin/k3s-uninstall.sh
          helm repo remove rancher-stable jetstack
          sudo chown -R sles:users /home/sles/actions-runner/_work/epinio-end-to-end-tests/epinio-end-to-end-tests/cypress/videos

