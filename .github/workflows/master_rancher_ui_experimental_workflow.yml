# This workflow is a reusable one called by other workflows 
name: Master Rancher UI EXPERIMENTAL workflow (template)

on:
  workflow_dispatch:
    inputs:
        experimental_chart_branch:
          description: "Add branch for experimental Epinio Charts"
          required: false
          default: ""

  workflow_call:
  # Variables to set when calling this reusable workflow
    inputs:
      browser:
        description: Web browser to test
        required: true
        type: string
        # Default browser
        default: chrome
      cypress_image:
        description: Cypress docker image to use
        required: true
        type: string
        # Default working cypress image for Chrome browser 
        default: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      cypress_install_test:
        description: Epinio installation test
        required: true
        type: string
      cypress_test:
        description: Scenario to test
        required: true
        type: string
        # Default cypress test. 
        default: menu.spec.ts
      docker_options:
        description: Set other docker options
        required: false
        type: string
      ext_reg:
        description: Enable external registry test
        required: false
        type: string
      runner:
        description: Runner on which to execute tests
        default: "ui-e2e-0"
        required: true
        type: string
        # Setting default runner to execute the test into
    secrets:
      ext_reg_user:
        required: false
      ext_reg_password:
        required: false
      s3_key_id:
        required: false
      s3_key_secret:
        required: false

jobs:
  installation:
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Tools
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: Install K3s / Helm / Rancher
        id: installation
        env:
          DASHBOARD_VERSION: epinio-dev
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          HELM_VERSION: 3.7.0
          K3S_VERSION: v1.24.6+k3s1
          EXT_REG: ${{ inputs.ext_reg }}
          # EXT_REG_USER: ${{ secrets.ext_reg_user }}
          # EXT_REG_PASSWORD: ${{ secrets.ext_reg_password }}
          EXT_REG_USER: secrets.EPINIO_DOCKER_USER
          EXT_REG_PASSWORD: secrets.EPINIO_DOCKER_PASSWORD
          S3_KEY_ID: ${{ secrets.s3_key_id }}
          S3_KEY_SECRET: ${{ secrets.s3_key_secret }}
        run: |
          ## Export information to other jobs
          ETH_DEV=$(ip route | awk '/default via / { print $5 }')
          MY_IP=$(ip a s ${ETH_DEV} | egrep -o 'inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | cut -d' ' -f2)
          export MY_HOSTNAME=$(hostname)
          export EPINIO_SYSTEM_DOMAIN="${MY_IP}.omg.howdoi.website"
          echo "MY_IP=${MY_IP}" >> $GITHUB_OUTPUT
          echo "MY_HOSTNAME=${MY_HOSTNAME}" >> $GITHUB_OUTPUT
          make prepare-e2e-ci-rancher

    outputs:
      MY_HOSTNAME: ${{ steps.installation.outputs.MY_HOSTNAME }}
      MY_IP: ${{ steps.installation.outputs.MY_IP }}

  # Use a first Cypress container to install Epinio on Rancher
  cypress-epinio-installation:
    needs:
      - installation
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    container:
      # image: ${{ inputs.cypress_image }}
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      env:
        CLUSTER_NAME: local
        CORS: https://${{ needs.installation.outputs.MY_HOSTNAME }}
        # EXT_REG_USER: ${{ secrets.ext_reg_user }}
        # EXT_REG_PASSWORD: ${{ secrets.ext_reg_password }}
        # Adding secrets statically
        EXT_REG_USER: secrets.EPINIO_DOCKER_USER
        EXT_REG_PASSWORD: secrets.EPINIO_DOCKER_PASSWORD
        RANCHER_USER: admin
        RANCHER_PASSWORD: rancherpassword
        RANCHER_URL: https://${{ needs.installation.outputs.MY_HOSTNAME }}/dashboard
        S3_KEY_ID: ${{ secrets.s3_key_id }}
        S3_KEY_SECRET: ${{ secrets.s3_key_secret }}
        SYSTEM_DOMAIN: ${{ needs.installation.outputs.MY_IP }}.omg.howdoi.website
        UI: rancher
        EXPERIMENTAL_CHART_BRANCH: ${{ github.event.inputs.experimental_chart_branch }}
        # EXTRAENV_NAME: SESSION_KEY
        # EXTRAENV_VALUE: 12345
      options: --add-host ${{ needs.installation.outputs.MY_HOSTNAME }}:${{ needs.installation.outputs.MY_IP }} --ipc=host ${{ inputs.docker_options }}
    steps:

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          # browser: ${{ inputs.browser }}
          browser: chrome
          # headless: true
          spec: |
            cypress/e2e/unit_tests/first_connexion.spec.ts
            cypress/e2e/unit_tests/${{ inputs.cypress_install_test }}
          config-file: cypress.config.ts

      - name: Copying screenshots and videos to Mochawesome report
        if: always()
        run: |
          mkdir -p mochawesome-report
          cp -r cypress/screenshots mochawesome-report || echo "No screenshots found in this run, probably all tests were OK"     
          cp -r cypress/videos mochawesome-report

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-install
          path: cypress/screenshots
          retention-days: 7

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-install
          path: cypress/videos
          retention-days: 7

      - name: Upload Mochawesome report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mochawesome-report
          path: mochawesome-report
          retention-days: 7

  # Patch Epinio to use the latest code version (main)
  # It can only be done with CLI
  epinio-patching:
    needs:
      - cypress-epinio-installation
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    steps:
      - name: Checkout Epinio repository
        uses: actions/checkout@v3
        with:
          repository: epinio/epinio
          submodules: recursive
          fetch-depth: 0
          path: epinio
      
      - name: Cache Tools
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools

      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH

      - name: Setup Go
        uses: actions/setup-go@v3
        env:
          SETUP_GO_VERSION: '^1.17.2'
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}

      # Disabled for experimental version
      # - name: Patch epinio-server
      #   env:
      #     KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      #   run: |
      #     cd epinio
      #     make build
      #     make patch-epinio-deployment

      # - name: Patch epinio-ui with latest QA image
      #   env:
      #     KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      #   run: |
      #     make patch-epinio-ui

  # Use a second Cypress container to run all Epinio's tests
  cypress-epinio-tests:
    needs:
      - installation
      - cypress-epinio-installation
      - epinio-patching
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    container:
      # image: ${{ inputs.cypress_image }}
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      env:
        CLUSTER_NAME: local
        RANCHER_USER: admin
        RANCHER_PASSWORD: password
        RANCHER_URL: https://epinio.${{ needs.installation.outputs.MY_IP }}.omg.howdoi.website
        SYSTEM_DOMAIN: ${{ needs.installation.outputs.MY_IP }}.omg.howdoi.website
        # set UI value to something else than 'rancher'
        UI: epinio-rancher
      options: --add-host ${{ needs.installation.outputs.MY_HOSTNAME }}:${{ needs.installation.outputs.MY_IP }} --ipc=host ${{ inputs.docker_options }}
    steps:
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          # browser: ${{ inputs.browser }}
          browser: chrome
          # headless: true
          spec: |
            cypress/e2e/unit_tests/${{ inputs.cypress_test }}
          config-file: cypress.config.ts

      - name: Copying screenshots and videos to Mochawesome report
        if: always()
        run: |
          mkdir -p mochawesome-report
          cp -r cypress/screenshots mochawesome-report || echo "No screenshots found in this run, probably all tests were OK"     
          cp -r cypress/videos mochawesome-report

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-tests
          path: cypress/screenshots
          retention-days: 7

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-tests
          path: cypress/videos
          retention-days: 7
      
      - name: Upload Mochawesome report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mochawesome-report
          path: mochawesome-report
          retention-days: 7

  cypress-epinio-uninstall:
    needs:
      - installation
      - cypress-epinio-installation
      - epinio-patching
      - cypress-epinio-tests
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    container:
      # image: ${{ inputs.cypress_image }}
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      env:
        CLUSTER_NAME: local
        RANCHER_USER: admin
        RANCHER_PASSWORD: rancherpassword
        RANCHER_URL: https://${{ needs.installation.outputs.MY_HOSTNAME }}/dashboard
        SYSTEM_DOMAIN: ${{ needs.installation.outputs.MY_IP }}.omg.howdoi.website
        UI: rancher
      options: --add-host ${{ needs.installation.outputs.MY_HOSTNAME }}:${{ needs.installation.outputs.MY_IP }} --ipc=host ${{ inputs.docker_options }}
    steps:

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          # browser: ${{ inputs.browser }}
          browser: chrome
          # headless: true
          spec: |
            cypress/e2e/unit_tests/uninstall.spec.ts
          config-file: cypress.config.ts

      - name: Copying screenshots and videos to Mochawesome report
        if: always()
        run: |
          mkdir -p mochawesome-report
          cp -r cypress/screenshots mochawesome-report || echo "No screenshots found in this run, probably all tests were OK"     
          cp -r cypress/videos mochawesome-report

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-uninstall
          path: cypress/screenshots
          retention-days: 7

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-uninstall
          path: cypress/videos
          retention-days: 7

      - name: Upload Mochawesome report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mochawesome-report
          path: mochawesome-report
          retention-days: 7

  delete-cluster:
    if: always()
    needs: [installation, cypress-epinio-installation, epinio-patching, cypress-epinio-tests, cypress-epinio-uninstall]
    # runs-on: ${{ inputs.runner }}
    runs-on: [self-hosted, ui-e2e-0]
    steps:

      - name: Delete k3s cluster
        if: always()
        run: |
          make clean-all

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1
